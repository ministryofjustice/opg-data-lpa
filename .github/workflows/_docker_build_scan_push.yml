permissions:
  actions: read
  checks: read
  contents: read
  deployments: none
  issues: none
  packages: none
  pull-requests: none
  repository-projects: none
  security-events: write
  statuses: none

on:
  workflow_call:
    inputs:
      branch_name:
        description: Branch name
        type: string
        required: false
      semver_tag:
        description: Semver tag
        required: true
        type: string
    outputs:
      ecr_image_uri:
        value: '${{ jobs.docker_build_scan_push.outputs.ecr_image_uri }}'
        description: ECR image URI

jobs:
  docker_build_scan_push:
    name: 'Build, Scan and Push Lambdas'
    runs-on: ubuntu-latest
    outputs:
      ecr_image_uri: ${{ steps.docker_tags.outputs.semver_tag }}
    strategy:
      matrix:
        data:
          - name: lpa-data-lambda
            docker_build_directory: lambda_functions/v1
            ecr_repository: integrations
            dockerfile: Function
    env:
      sarif_file: trivy-results.sarif
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Configure AWS Credentials With Assumed Role to Management
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID_ACTIONS }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY_ACTIONS }}'
          aws-region: eu-west-1
          role-to-assume: 'arn:aws:iam::311462405659:role/integrations-ci'
          role-duration-seconds: 900
          role-session-name: OPGLPADataGithubAction

      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Generate tags for Docker
        env:
          SEMVER_TAG: '${{ inputs.semver_tag }}'
          ECR_REGISTRY: '${{ steps.login_ecr.outputs.registry }}'
          ECR_REPOSITORY: '${{ matrix.data.ecr_repository }}/${{ matrix.data.name }}'
        id: docker_tags
        run: >
          if ${{ inputs.branch_name == 'main' }}; then
            echo "tags=$ECR_REGISTRY/$ECR_REPOSITORY:latest,$ECR_REGISTRY/$ECR_REPOSITORY:main-$SEMVER_TAG" >> $GITHUB_OUTPUT
            echo "semver_tag=$ECR_REGISTRY/$ECR_REPOSITORY:main-$SEMVER_TAG" >> $GITHUB_OUTPUT
          else
            echo "tags=$ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER_TAG" >> $GITHUB_OUTPUT
            echo "semver_tag=$ECR_REGISTRY/$ECR_REPOSITORY:$SEMVER_TAG" >> $GITHUB_OUTPUT
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: 'linux/amd64'
          file: >-
            ${{ matrix.data.docker_build_directory }}/Dockerfile-${{
            matrix.data.dockerfile }}
          push: true
          tags: '${{ steps.docker_tags.outputs.tags }}'
          provenance: false

      - name: Trivy scan
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db:1
        with:
          image-ref: '${{ steps.docker_tags.outputs.semver_tag }}'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          format: sarif
          output: '${{ env.sarif_file }}'

      - name: Trivy scan upload to github
        uses: github/codeql-action/upload-sarif@d6bbdef45e766d081b84a2def353b0055f728d3e # v3.29.3
        if: always()
        with:
          sarif_file: '${{ env.sarif_file }}'
